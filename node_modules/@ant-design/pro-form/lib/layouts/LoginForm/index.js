"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _antd = require("antd");

var _react = _interopRequireWildcard(require("react"));

var _ProForm = _interopRequireDefault(require("../ProForm"));

var _lodash = _interopRequireDefault(require("lodash.merge"));

require("./index.less");

var _excluded = ["message", "title", "subTitle", "submitting", "actions", "children"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function LoginForm(props) {
  var message = props.message,
      title = props.title,
      subTitle = props.subTitle,
      submitting = props.submitting,
      actions = props.actions,
      children = props.children,
      proFormProps = _objectWithoutProperties(props, _excluded);

  var submitter = (0, _lodash.default)({}, {
    searchConfig: {
      submitText: '登录'
    },
    render: function render(_, dom) {
      return dom.pop();
    },
    submitButtonProps: {
      loading: submitting,
      size: 'large',
      style: {
        width: '100%'
      }
    }
  }, proFormProps.submitter);
  var context = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext);
  var baseClassName = context.getPrefixCls('pro-form-login');

  var getCls = function getCls(className) {
    return "".concat(baseClassName, "-").concat(className);
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    className: getCls('container')
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: getCls('top')
  }, title ? /*#__PURE__*/_react.default.createElement("div", {
    className: getCls('header')
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: getCls('title')
  }, title)) : null, subTitle ? /*#__PURE__*/_react.default.createElement("div", {
    className: getCls('desc')
  }, subTitle) : null), /*#__PURE__*/_react.default.createElement("div", {
    className: getCls('main')
  }, /*#__PURE__*/_react.default.createElement(_ProForm.default, _extends({
    submitter: submitter
  }, proFormProps), message, children), actions ? /*#__PURE__*/_react.default.createElement("div", {
    className: getCls('other')
  }, actions) : null));
}

var _default = LoginForm;
exports.default = _default;