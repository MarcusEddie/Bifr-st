import "antd/es/config-provider/style";
import _ConfigProvider from "antd/es/config-provider";
var _excluded = ["message", "title", "subTitle", "submitting", "actions", "children"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { useContext } from 'react';
import ProForm from '../ProForm';
import merge from 'lodash.merge';
import './index.less';

function LoginForm(props) {
  var message = props.message,
      title = props.title,
      subTitle = props.subTitle,
      submitting = props.submitting,
      actions = props.actions,
      children = props.children,
      proFormProps = _objectWithoutProperties(props, _excluded);

  var submitter = merge({}, {
    searchConfig: {
      submitText: '登录'
    },
    render: function render(_, dom) {
      return dom.pop();
    },
    submitButtonProps: {
      loading: submitting,
      size: 'large',
      style: {
        width: '100%'
      }
    }
  }, proFormProps.submitter);
  var context = useContext(_ConfigProvider.ConfigContext);
  var baseClassName = context.getPrefixCls('pro-form-login');

  var getCls = function getCls(className) {
    return "".concat(baseClassName, "-").concat(className);
  };

  return /*#__PURE__*/React.createElement("div", {
    className: getCls('container')
  }, /*#__PURE__*/React.createElement("div", {
    className: getCls('top')
  }, title ? /*#__PURE__*/React.createElement("div", {
    className: getCls('header')
  }, /*#__PURE__*/React.createElement("span", {
    className: getCls('title')
  }, title)) : null, subTitle ? /*#__PURE__*/React.createElement("div", {
    className: getCls('desc')
  }, subTitle) : null), /*#__PURE__*/React.createElement("div", {
    className: getCls('main')
  }, /*#__PURE__*/React.createElement(ProForm, _extends({
    submitter: submitter
  }, proFormProps), message, children), actions ? /*#__PURE__*/React.createElement("div", {
    className: getCls('other')
  }, actions) : null));
}

export default LoginForm;